const express = require("express");
const cors = require("cors");
const app = express();
const port = 3000;

// Verileri JSON olarak alabilmek iÃ§in middleware
app.use(cors());
app.use(express.json());

// Test sorularÄ± ve karakterler
const questions = [
    {
        question: "En sevdiÄŸin renk?",
        options: {
            "Mavi": "Rainbow Dash",
            "Mor": "Twilight Sparkle",
            "SarÄ±": "Fluttershy",
            "Pembe": "Pinkie Pie",
            "Beyaz": "Rarity",
            "Turuncu": "Applejack"
        }
    },
    {
        question: "Hafta sonlarÄ±nÄ± nasÄ±l geÃ§irirsin?",
        options: {
            "Macera dolu aktiviteler!": "Rainbow Dash",
            "Kitap okumak ve Ã¶ÄŸrenmek": "Twilight Sparkle",
            "Hayvanlarla vakit geÃ§irmek": "Fluttershy",
            "Parti ve eÄŸlence!": "Pinkie Pie",
            "Moda ve tasarÄ±m": "Rarity",
            "Ã‡iftlik iÅŸleri ve doÄŸa": "Applejack"
        }
    },
    {
        question: "En sevdiÄŸin Ã¶zellik?",
        options: {
            "Cesaret ve hÄ±z": "Rainbow Dash",
            "Bilgelik ve liderlik": "Twilight Sparkle",
            "Åžefkat ve merhamet": "Fluttershy",
            "NeÅŸe ve eÄŸlence": "Pinkie Pie",
            "Zarafet ve stil": "Rarity",
            "Ã‡alÄ±ÅŸkanlÄ±k ve sadakat": "Applejack"
        }
    }
];

// KullanÄ±cÄ±nÄ±n verdiÄŸi cevaplara gÃ¶re karakter belirleyen fonksiyon
app.post("/test", (req, res) => {
    const answers = req.body.answers;

    // Puan tablosu
    let scores = {
        "Rainbow Dash": 0,
        "Twilight Sparkle": 0,
        "Fluttershy": 0,
        "Pinkie Pie": 0,
        "Rarity": 0,
        "Applejack": 0
    };

    // KullanÄ±cÄ±nÄ±n verdiÄŸi her cevap iÃ§in karakter puanlarÄ±nÄ± artÄ±r
    answers.forEach((answer, index) => {
        const selectedCharacter = questions[index].options[answer];
        if (selectedCharacter) {
            scores[selectedCharacter]++;
        }
    });

    // En yÃ¼ksek puana sahip karakteri belirle
    const resultCharacter = Object.keys(scores).reduce((a, b) => (scores[a] > scores[b] ? a : b));

    res.json({ character: resultCharacter });
});

// Test sorularÄ±nÄ± dÃ¶ndÃ¼ren endpoint
app.get("/questions", (req, res) => {
    res.json(questions);
});

// Sunucuyu baÅŸlat
app.listen(port, () => {
    console.log(`ðŸš€ Server running at http://localhost:${port}`);
});
